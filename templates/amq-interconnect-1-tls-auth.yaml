kind: Template
apiVersion: v1
metadata:
  name: amq-interconnect-1-tls-auth
  annotations:
    description: Application template for Red Hat Interconnect Router
        with TLS authentication. This template requires a secret
        holding a ca for verifying client certificates and a secret
        holding the certs and key required for inter-router
        authentication and encryption.
    iconClass: icon-amq
    openshift.io/provider-display-name: Red Hat, Inc.
    tags: messaging,amq
    version: 1.4.10
    openshift.io/display-name: Red Hat AMQ Interconnect Router 1.x with TLS authentication
labels:
  template: amq-interconnect-1-tls-auth
  xpaas: 1.4.10
message: A new messaging service has been created in your project.
parameters:
- displayName: Application Name
  description: The name for the application.
  name: APPLICATION_NAME
  value: amq-interconnect
  required: true
- displayName: Router internal certificates
  description: Name of secret containing certificate with which to authenticate inter-router connections.
  name: INTER_ROUTER_CERTS_SECRET
  value: inter-router-certs
- displayName: Client CA certificates
  description: Name of secret containing CA certificate with which valid client certificates were signed.
  name: CLIENT_CA_SECRET
  value: client-ca
- displayName: ImageStream Namespace
  description: Namespace in which the ImageStreams for Red Hat Middleware images are
    installed. These ImageStreams are normally installed in the openshift namespace.
    You should only need to modify this if you've installed the ImageStreams in a
    different namespace/project.
  name: IMAGE_STREAM_NAMESPACE
  value: openshift
- displayName: qdrouterd.conf
  description: The router configuration file
  name: QDROUTERD_CONF
  value: |-
    router {
        mode: interior
        id: Router.${HOSTNAME}
    }

    # only allow anonymous connections over localhost
    listener {
        host: localhost
        port: amqp
        authenticatePeer: no
        saslMechanisms: ANONYMOUS
    }

    listener {
        host: 0.0.0.0
        port: amqps
        sslProfile: service_tls
        authenticatePeer: yes
        requireSsl: true
        saslMechanisms: EXTERNAL
    }

    listener {
        host: 0.0.0.0
        port: 55672
        role: inter-router
        sslProfile: inter_router_tls
        authenticatePeer: yes
        requireSsl: true
        saslMechanisms: EXTERNAL
    }

    sslProfile {
        name: inter_router_tls
        certFile: /etc/qpid-dispatch-certs/inter-router/tls.crt
        privateKeyFile: /etc/qpid-dispatch-certs/inter-router/tls.key
        caCertFile: /etc/qpid-dispatch-certs/inter-router/ca.crt
    }

    sslProfile {
        name: service_tls
        certFile: /etc/qpid-dispatch-certs/normal/tls.crt
        keyFile: /etc/qpid-dispatch-certs/normal/tls.key
        caCertFile: /etc/qpid-dispatch-certs/client-ca/ca.crt
    }

    listener {
        host: 0.0.0.0
        port: 8672
        authenticatePeer: no
        saslMechanisms: ANONYMOUS
        sslProfile: service_tls
        http: true
        httpRootDir: /usr/share/qpid-dispatch/console
    }

    address {
        prefix: closest
        distribution: closest
    }

    address {
        prefix: multicast
        distribution: multicast
    }

    address {
        prefix: unicast
        distribution: closest
    }

    address {
        prefix: exclusive
        distribution: closest
    }

    address {
        prefix: broadcast
        distribution: multicast
    }

objects:
- kind: Service
  apiVersion: v1
  metadata:
    name: ${APPLICATION_NAME}
    labels:
      application: ${APPLICATION_NAME}
    annotations:
      description: The router's AMQP port.
      service.alpha.openshift.io/serving-cert-secret-name: ${APPLICATION_NAME}-cert
  spec:
    ports:
    - port: 5672
      name: amqp
      targetPort: 5672
    - port: 5671
      name: amqps
      targetPort: 5671
    - port: 8672
      name: http
      targetPort: 8672
    - port: 55672
      name: inter-router
      targetPort: 55672
    selector:
      deploymentConfig: ${APPLICATION_NAME}
- kind: DeploymentConfig
  apiVersion: v1
  metadata:
    name: "${APPLICATION_NAME}"
    labels:
      application: "${APPLICATION_NAME}"
  spec:
    strategy:
      type: Rolling
      rollingParams:
        maxSurge: 0
    triggers:
    - type: ImageChange
      imageChangeParams:
        automatic: true
        containerNames:
        - "${APPLICATION_NAME}"
        from:
          kind: ImageStreamTag
          namespace: "${IMAGE_STREAM_NAMESPACE}"
          name: amq-interconnect-1.2-openshift:latest
    - type: ConfigChange
    replicas: 2
    selector:
      deploymentConfig: "${APPLICATION_NAME}"
    template:
      metadata:
        name: "${APPLICATION_NAME}"
        labels:
          deploymentConfig: "${APPLICATION_NAME}"
          application: "${APPLICATION_NAME}"
      spec:
        serviceAccountName: ${APPLICATION_NAME}
        terminationGracePeriodSeconds: 60
        containers:
        - name: "${APPLICATION_NAME}"
          ports:
          - name: amqp
            containerPort: 5672
            protocol: TCP
          - name: amqps
            containerPort: 5671
            protocol: TCP
          - name: http
            containerPort: 8672
            protocol: TCP
          - name: inter
            containerPort: 55672
            protocol: TCP
          env:
          - name: APPLICATION_NAME
            value: "${APPLICATION_NAME}"
          - name: QDROUTERD_CONF
            value: "/etc/qpid-dispatch/qdrouterd.conf"
          - name: QDROUTERD_AUTO_MESH_DISCOVERY
            value: "QUERY"
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          - name: POD_IP
            valueFrom:
              fieldRef:
                fieldPath: status.podIP
            image: amq-interconnect-1.2-openshift:latest
          volumeMounts:
          - name: certs
            readOnly: true
            mountPath: /etc/qpid-dispatch-certs/normal/
          - name: inter-router-certs
            readOnly: true
            mountPath: /etc/qpid-dispatch-certs/inter-router/
          - name: client-ca
            readOnly: true
            mountPath: /etc/qpid-dispatch-certs/client-ca/
          - name: config-volume
            mountPath: /etc/qpid-dispatch/
          terminationGracePeriodSeconds: 60
          readinessProbe:
            tcpSocket:
              port: 8672
          livenessProbe:
            tcpSocket:
              port: 8672
        volumes:
        - name: certs
          secret:
            secretName: ${APPLICATION_NAME}-cert
        - name: inter-router-certs
          secret:
            secretName: ${INTER_ROUTER_CERTS_SECRET}
        - name: client-ca
          secret:
            secretName: ${CLIENT_CA_SECRET}
        - name: config-volume
          configMap:
            name: ${APPLICATION_NAME}
        imagePullPolicy: Always
- kind: ServiceAccount
  apiVersion: v1
  metadata:
    name: ${APPLICATION_NAME}
    labels:
      application: "${APPLICATION_NAME}"
- kind: RoleBinding
  apiVersion: v1
  metadata:
    name: ${APPLICATION_NAME}-view
    labels:
      application: "${APPLICATION_NAME}"
  subjects:
  - kind: ServiceAccount
    name: ${APPLICATION_NAME}
  roleRef:
    name: "view"
- kind: ConfigMap
  apiVersion: v1
  metadata:
    name: ${APPLICATION_NAME}
    labels:
      application: ${APPLICATION_NAME}
  data:
    qdrouterd.conf: ${QDROUTERD_CONF}
- kind: Route
  apiVersion: v1
  metadata:
    name: ${APPLICATION_NAME}
    labels:
      application: ${APPLICATION_NAME}
  spec:
    port:
      targetPort: amqps
    tls:
      termination: passthrough
    to:
      kind: Service
      name: amq-interconnect
